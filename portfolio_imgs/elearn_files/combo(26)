YUI.add("photoList-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{langBundles:this.details.langBundles,name:this.name,attributes:{displayType:{readOnly:!0,defaultValue:"photo list"},title:{readOnly:!0,defaultFn:function(e){return this.intlMessage({intlName:"models.PHOTO_LIST"})}},url:{readOnly:!0,defaultFn:function(e){return""}},urlSuffix:{readOnly:!0,defaultFn:function(e){return"photolist-"+e}},photoContextList:{isListProxy:!0,contextFetch:{listFetcher:e.ListFetchers["flickr-photoList-getContext"],listItemIdField:"photoId"}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-photoList-getContext-fetcher"],langBundles:["models"]});
YUI.add("flickr-photoList-getContext-fetcher",function(e){"use strict";function t(t){var n={photo_id:t.photoId,photolist_id:t.id,num_prev:t.numPrev,num_next:t.numNext,extras:e.APIHelper.request.getRebootPhotoExtras()};return n}function n(t,n){var r=t[0],i=t[1],s=t[2],o=t[3],u=t[4],a=[],f=[],l,c=s.proxy(n.photoId),h,p,d,v,m,g=[];return h=r.prevphotos,l=r.nextphotos,f=e.APIHelper.response.parsePhotos({photos:l.photo,personModelRegistry:o,photoModelRegistry:s,photoEngagementModelRegistry:u}),a=e.APIHelper.response.parsePhotos({photos:h.photo,personModelRegistry:o,photoModelRegistry:s,photoEngagementModelRegistry:u}),m=i.getValue(n.id,"photoContextList"),d=m.hasMinBoundary?m.hasMinBoundary():!1,v=m.hasMaxBoundary?m.hasMaxBoundary():!1,p=m.getList(),g=e.APIHelper.response.addOrReplaceListByContext({model:c,next:f,prev:a.reverse(),current:p,hasMin:d,hasMax:v,numNext:n.numNext,numPrev:n.numPrev}),i.setValue(n.id,"photoContextList",g),{next:f,previous:a.reverse()}}function r(t,n){var r=this;return e.batch(n.callAPI("flickr.photolist.getContext",this._processParams(t),!0),n.getModelRegistry("photoList-models"),n.getModelRegistry("photo-models"),n.getModelRegistry("person-models"),n.getModelRegistry("photo-engagement-models")).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-photoList-getContext-fetcher] failed getting or processing API response:",e),e.code===1&&e.message==="Photo not in list"&&(e.notInContext=!0),e})}e.namespace("ListFetchers")["flickr-photoList-getContext"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["photoList-models","photo-models","photo-engagement-models"]});
YUI.add("photo-privacy-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{read:function(t){return e.ModelFetchers["flickr-photos-getInfo"].run(t,this.appContext)},update:function(t,n){var r;return r={photo_id:t,is_public:this.getValue(t,"isPublic"),is_friend:this.getValue(t,"isVisibleByFriends"),is_family:this.getValue(t,"isVisibleByFamily"),perm_addmeta:this.getValue(t,"permAddMeta"),perm_comment:this.getValue(t,"permComment")},e.ModelUpdaters["flickr-photos-setPerms"].run(r,this.appContext)}},attributes:{isPublic:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!1},isVisibleByFriends:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!1},isVisibleByFamily:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!1},permAddMeta:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)},defaultValue:0},permComment:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)},defaultValue:0}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-photos-getPerms-fetcher","flickr-photos-setPerms-updater","attribute-helpers"]});
YUI.add("flickr-photos-getPerms-fetcher",function(e){"use strict";function t(e,t){var n=e[0],r=e[1],i;i={id:t.id,isPublic:n.perms.ispublic,isVisibleByFriends:n.perms.isfriend,isVisibleByFamily:n.perms.isfamily,permAddMeta:n.perms.permaddmeta,permComment:n.perms.permcomment},r.exists(t.id)||r.add(i)}function n(t,n){var r=t.id,i={photo_id:r},s=this;return e.batch(n.callAPI("flickr.photos.getPerms",i),n.getModelRegistry("photo-privacy-models")).then(function(e){return s._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-photos-getPerms-fetcher] failed getting or processing API response:",e),e})}e.namespace("ModelFetchers")["flickr-photos-getPerms"]={run:n,_processResponse:t}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["photo-privacy-models"]});
